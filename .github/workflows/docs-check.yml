name: Docs Check
on:
  pull_request:
    branches: [ main, 'stabilize/**', 'docs/**' ]
  push:
    branches: [ main ]
jobs:
  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci || npm install

      - name: Check .env.example completeness
        run: |
          echo "🔍 Checking .env.example for required variables..."
          npm run env:check

      - name: Check for hardcoded versions
        run: |
          echo "🔍 Checking for hardcoded versions in documentation..."

          # Check for hardcoded React versions
          if grep -r "React [0-9]" docs/ --include="*.md" --exclude="VERSION.md"; then
            echo "❌ Found hardcoded React version! Use link to VERSION.md instead."
            exit 1
          fi

          # Check for hardcoded Express versions
          if grep -r "Express [0-9]" docs/ --include="*.md" --exclude="VERSION.md"; then
            echo "❌ Found hardcoded Express version! Use link to VERSION.md instead."
            exit 1
          fi

          # Check for hardcoded app versions (allow in CHANGELOG.md)
          if grep -r "version.*[0-9]\.[0-9]\.[0-9]" docs/ --include="*.md" --exclude="VERSION.md" --exclude="CHANGELOG.md" | grep -v "VERSION.md"; then
            echo "⚠️ Found potential hardcoded version. Please verify it links to VERSION.md"
          fi

          echo "✅ No hardcoded versions found"

      - name: Check required headers
        run: |
          echo "🔍 Checking for required headers in documentation..."

          # Check for Last Updated header
          for file in docs/*.md docs/**/*.md; do
            if [ -f "$file" ] && [ "$file" != "docs/archive/*" ]; then
              if ! grep -q "Last Updated" "$file"; then
                echo "⚠️ Missing 'Last Updated' header in: $file"
              fi
            fi
          done

      - name: Markdown link check
        run: |
          echo "🔍 Checking markdown links..."
          npx markdown-link-check docs/*.md docs/**/*.md --config .github/markdown-link-check.json || true

      - name: Check documentation standards
        run: |
          echo "📋 Documentation standards reminder:"
          echo "- All docs must have 'Last Updated' date"
          echo "- Version references must link to VERSION.md"
          echo "- Code references should link to source files"
          echo "- No duplicate .env.example files"

      - name: Coverage report location
        run: |
          echo "📊 Coverage Information:"
          echo "Current baseline: ~23.47%"
          echo "Report location: server/coverage/index.html"

      - name: Summary
        run: |
          echo "## Documentation Check Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ Environment variables checked" >> $GITHUB_STEP_SUMMARY
          echo "✅ No hardcoded versions" >> $GITHUB_STEP_SUMMARY
          echo "✅ Documentation standards applied" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Current Versions (from VERSION.md)" >> $GITHUB_STEP_SUMMARY
          echo "- App: 6.0.6" >> $GITHUB_STEP_SUMMARY
          echo "- React: 18.3.1" >> $GITHUB_STEP_SUMMARY
          echo "- Express: 4.21.2" >> $GITHUB_STEP_SUMMARY
          echo "- Coverage: ~23.47%" >> $GITHUB_STEP_SUMMARY
