name: Security Tests

on:
  push:
    branches: [main, develop]
    paths-ignore:
      - 'docs/**'
      - '**/*.md'
      - 'scripts/docs-check.js'
      - '.github/workflows/docs-ci.yml'
      - '.github/workflows/docs-check.yml'
  pull_request:
    branches: [main, develop]
    paths-ignore:
      - 'docs/**'
      - '**/*.md'
      - 'scripts/docs-check.js'
      - '.github/workflows/docs-ci.yml'
      - '.github/workflows/docs-check.yml'
  schedule:
    - cron: '0 0 * * 1' # Weekly on Monday

jobs:
  security-tests:
    name: Security Proof Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - uses: dorny/paths-filter@v3
        id: changed
        with:
          filters: |
            docs:
              - 'docs/**'
              - '**/*.md'
              - 'scripts/docs-check.js'
              - '.github/workflows/docs-ci.yml'
              - '.github/workflows/docs-check.yml'

      - name: Docs-only — short circuit
        if: ${{ steps.changed.outputs.docs == 'true' }}
        run: |
          echo "Docs-only PR detected; short-circuiting job with success."
          exit 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: |
          npm ci --workspaces --include-workspace-root

      - name: Run CSRF proof tests
        run: |
          cd server
          npm test tests/security/csrf.proof.test.ts
        env:
          NODE_ENV: test
          STRICT_AUTH: true

      - name: Run rate limit proof tests
        run: |
          cd server
          npm test tests/security/ratelimit.proof.test.ts
        env:
          NODE_ENV: test

      - name: Run RBAC proof tests
        run: |
          cd server
          npm test tests/security/rbac.proof.test.ts
        env:
          NODE_ENV: test

      - name: Run webhook HMAC proof tests
        run: |
          cd server
          npm test tests/security/webhook.proof.test.ts || true
        env:
          NODE_ENV: test
          WEBHOOK_SECRET: test-webhook-secret

      - name: Run CORS proof tests
        run: |
          cd server
          npm test tests/security/cors.proof.test.ts
        env:
          NODE_ENV: test

      - name: Check for exposed secrets
        run: |
          # Check for API keys in code
          if rg "[REDACTED][A-Za-z0-9]+" --type-not env; then
            echo "❌ Found exposed API keys!"
            exit 1
          fi
          echo "✅ No exposed API keys found"

      - name: Verify CORS configuration
        run: |
          # Check for wildcard CORS patterns
          if rg "origin\\.match.*vercel\\.app" server/; then
            echo "❌ Found wildcard CORS pattern!"
            exit 1
          fi
          echo "✅ CORS configuration is strict"

      - name: Check webhook signature implementation
        run: |
          # Verify webhook signature middleware exists
          if [ ! -f "server/src/middleware/webhookSignature.ts" ]; then
            echo "⚠️ Webhook signature middleware not found"
          else
            echo "✅ Webhook signature middleware exists"
          fi

  dependency-audit:
    name: Dependency Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - uses: dorny/paths-filter@v3
        id: changed
        with:
          filters: |
            docs:
              - 'docs/**'
              - '**/*.md'
              - 'scripts/docs-check.js'
              - '.github/workflows/docs-ci.yml'
              - '.github/workflows/docs-check.yml'

      - name: Docs-only — short circuit
        if: ${{ steps.changed.outputs.docs == 'true' }}
        run: |
          echo "Docs-only PR detected; short-circuiting job with success."
          exit 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Run npm audit
        run: |
          npm audit --audit-level=high
          cd client && npm audit --audit-level=high
          cd ../server && npm audit --audit-level=high
        continue-on-error: true

      - name: Upload audit results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: audit-report
          path: |
            npm-audit.json
          retention-days: 30

  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: ['javascript', 'typescript']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - uses: dorny/paths-filter@v3
        id: changed
        with:
          filters: |
            docs:
              - 'docs/**'
              - '**/*.md'
              - 'scripts/docs-check.js'
              - '.github/workflows/docs-ci.yml'
              - '.github/workflows/docs-check.yml'

      - name: Docs-only — short circuit
        if: ${{ steps.changed.outputs.docs == 'true' }}
        run: |
          echo "Docs-only PR detected; short-circuiting job with success."
          exit 0

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"
