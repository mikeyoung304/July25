name: CI

on:
  push:
    branches: [main, develop]
  # Disabled on PRs - using frontend-ci, playwright-smoke, lighthouse-performance instead
  # pull_request:
  #   branches: [main, develop]

jobs:
  quality-gates:
    name: Quality Gates
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
            
      - name: Install dependencies
        run: npm ci
        
      - name: Install server dependencies
        run: cd server && npm ci
        
      - name: Install client dependencies
        run: cd client && npm ci
        
      - name: Run CI Guards
        run: ./scripts/ci-guards.sh
        
      - name: Verify no forbidden ports
        run: npm run verify:ports
        
      - name: Run ESLint
        run: npm run lint:fix -- --max-warnings=0
        
      - name: Type check
        run: npm run typecheck
        
      - name: Run tests
        run: npm test -- --runInBand --maxWorkers=2
        env:
          NODE_ENV: test
          
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps chromium
        
      - name: Run Playwright tests
        run: npm run test:e2e
        env:
          NODE_ENV: test
      
      - name: E2E (Puppeteer)
        run: node scripts/puppeteer-test.mjs
        env:
          CI: true
        
      - name: Upload Playwright Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
          
  code-analysis:
    name: Code Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          
      - name: Install dependencies
        run: |
          npm ci
          cd server && npm ci
          cd ../client && npm ci
          
      - name: Generate code analysis
        run: npm run analyze
        
      - name: Upload analysis reports
        uses: actions/upload-artifact@v4
        with:
          name: code-analysis
          path: |
            code-analysis.json
            code-analysis.md
          retention-days: 30
          
      - name: Comment PR with analysis
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('code-analysis.md', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: report
            });