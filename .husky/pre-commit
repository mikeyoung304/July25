#!/usr/bin/env bash
. "$(dirname "$0")/_/husky.sh"

echo "[husky] pre-commit: quick typecheck + lint"

# Allow skipping on local emergency fixes:
#   SKIP_PRECOMMIT_TS=1 git commit -m "..."
if [ -z "$SKIP_PRECOMMIT_TS" ]; then
  npm run typecheck:quick --workspaces || exit 1
fi

npm run lint --workspaces --silent || exit 1

# Validate GitHub Actions workflows
if git diff --cached --name-only | grep -q "^\.github/workflows/.*\.yml$"; then
  echo "üîç Workflow files detected, validating..."
  npm run validate:workflows
fi

# Check for schema drift if staging migration files
if git diff --cached --name-only | grep -q "^supabase/migrations/.*\.sql$"; then
  echo "üîç Migration files detected, checking schema sync..."

  if command -v supabase &> /dev/null; then
    if ! supabase db diff --linked > /dev/null 2>&1; then
      echo ""
      echo "‚ö†Ô∏è  WARNING: You are committing migration files, but schema drift detected!"
      echo ""
      echo "Migrations should be deployed BEFORE committing:"
      echo "  supabase db push --linked"
      echo ""
      echo "To commit anyway: git commit --no-verify"
      echo ""
      exit 1
    fi
    echo "‚úÖ Schema in sync"
  else
    echo "‚ö†Ô∏è  Supabase CLI not found, skipping schema check"
    echo "   Install: brew install supabase/tap/supabase"
  fi
fi

# Documentation validation (fast checks only)
if git diff --cached --name-only | grep -q "\.md$"; then
  echo ""
  echo "üìö Validating documentation..."

  # Check for orphaned files (critical - blocks commit)
  echo "  ‚Üí Checking for orphaned files..."
  if ! node scripts/docs-check.js --orphans-only; then
    echo ""
    echo "‚ùå Orphaned documentation files detected!"
    echo "   Please link these files in index.md or move to docs/archive/"
    echo "   To commit anyway: git commit --no-verify"
    echo ""
    exit 1
  fi

  # Check timestamps on modified docs (warning only - doesn't block)
  echo "  ‚Üí Checking timestamps on staged files..."
  node scripts/check-timestamps.js --staged

  # Check table formatting on modified docs (critical - blocks commit)
  echo "  ‚Üí Checking table formatting..."
  STAGED_MD_FILES=$(git diff --cached --name-only | grep "\.md$" | tr '\n' ' ')
  if [ ! -z "$STAGED_MD_FILES" ]; then
    if ! node scripts/check-tables.js $STAGED_MD_FILES; then
      echo ""
      echo "‚ùå Malformed tables detected in staged files!"
      echo "   Please fix table formatting before committing"
      echo "   To commit anyway: git commit --no-verify"
      echo ""
      exit 1
    fi
  fi

  echo "  ‚úÖ Documentation validation passed"
fi
