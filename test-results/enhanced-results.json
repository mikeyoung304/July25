{
  "config": {
    "configFile": "/Users/mikeyoung/CODING/rebuild-6.0/playwright-enhanced.config.ts",
    "rootDir": "/Users/mikeyoung/CODING/rebuild-6.0/tests/enhanced",
    "forbidOnly": false,
    "fullyParallel": true,
    "globalSetup": null,
    "globalTeardown": null,
    "globalTimeout": 0,
    "grep": {},
    "grepInvert": null,
    "maxFailures": 0,
    "metadata": {
      "actualWorkers": 4
    },
    "preserveOutput": "always",
    "reporter": [
      [
        "html",
        {
          "outputFolder": "test-results/enhanced-html-report"
        }
      ],
      [
        "json",
        {
          "outputFile": "test-results/enhanced-results.json"
        }
      ]
    ],
    "reportSlowTests": {
      "max": 5,
      "threshold": 300000
    },
    "quiet": false,
    "projects": [
      {
        "outputDir": "/Users/mikeyoung/CODING/rebuild-6.0/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 4
        },
        "id": "chromium",
        "name": "chromium",
        "testDir": "/Users/mikeyoung/CODING/rebuild-6.0/tests/enhanced",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/Users/mikeyoung/CODING/rebuild-6.0/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 4
        },
        "id": "firefox",
        "name": "firefox",
        "testDir": "/Users/mikeyoung/CODING/rebuild-6.0/tests/enhanced",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/Users/mikeyoung/CODING/rebuild-6.0/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 4
        },
        "id": "webkit",
        "name": "webkit",
        "testDir": "/Users/mikeyoung/CODING/rebuild-6.0/tests/enhanced",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/Users/mikeyoung/CODING/rebuild-6.0/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 4
        },
        "id": "Mobile Chrome",
        "name": "Mobile Chrome",
        "testDir": "/Users/mikeyoung/CODING/rebuild-6.0/tests/enhanced",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/Users/mikeyoung/CODING/rebuild-6.0/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 4
        },
        "id": "Mobile Safari",
        "name": "Mobile Safari",
        "testDir": "/Users/mikeyoung/CODING/rebuild-6.0/tests/enhanced",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/Users/mikeyoung/CODING/rebuild-6.0/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 4
        },
        "id": "visual-regression",
        "name": "visual-regression",
        "testDir": "/Users/mikeyoung/CODING/rebuild-6.0/tests/visual",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/Users/mikeyoung/CODING/rebuild-6.0/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 4
        },
        "id": "accessibility",
        "name": "accessibility",
        "testDir": "/Users/mikeyoung/CODING/rebuild-6.0/tests/a11y",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/Users/mikeyoung/CODING/rebuild-6.0/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 4
        },
        "id": "api",
        "name": "api",
        "testDir": "/Users/mikeyoung/CODING/rebuild-6.0/tests/api",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/Users/mikeyoung/CODING/rebuild-6.0/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 4
        },
        "id": "performance",
        "name": "performance",
        "testDir": "/Users/mikeyoung/CODING/rebuild-6.0/tests/performance",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 30000
      }
    ],
    "shard": null,
    "updateSnapshots": "missing",
    "updateSourceMethod": "patch",
    "version": "1.54.2",
    "workers": 7,
    "webServer": {
      "command": "npm run dev",
      "port": 5173,
      "reuseExistingServer": true,
      "timeout": 120000
    }
  },
  "suites": [
    {
      "title": "../api/restaurant-api.spec.ts",
      "file": "../api/restaurant-api.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Restaurant API Tests",
          "file": "../api/restaurant-api.spec.ts",
          "line": 6,
          "column": 6,
          "specs": [
            {
              "title": "health check endpoint responds correctly",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api",
                  "projectName": "api",
                  "results": [
                    {
                      "workerIndex": 0,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 25,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m, \u001b[22m\u001b[32mvalue\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"status\"\u001b[39m\n\nExpected value: \u001b[32m\"ok\"\u001b[39m\nReceived value: \u001b[31m\"healthy\"\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m, \u001b[22m\u001b[32mvalue\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"status\"\u001b[39m\n\nExpected value: \u001b[32m\"ok\"\u001b[39m\nReceived value: \u001b[31m\"healthy\"\u001b[39m\n    at /Users/mikeyoung/CODING/rebuild-6.0/tests/api/restaurant-api.spec.ts:18:18",
                        "location": {
                          "file": "/Users/mikeyoung/CODING/rebuild-6.0/tests/api/restaurant-api.spec.ts",
                          "column": 18,
                          "line": 18
                        },
                        "snippet": "  16 |     \n  17 |     const data = await response.json();\n> 18 |     expect(data).toHaveProperty('status', 'ok');\n     |                  ^\n  19 |     expect(data).toHaveProperty('timestamp');\n  20 |     expect(data).toHaveProperty('version');\n  21 |   });"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/mikeyoung/CODING/rebuild-6.0/tests/api/restaurant-api.spec.ts",
                            "column": 18,
                            "line": 18
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m, \u001b[22m\u001b[32mvalue\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"status\"\u001b[39m\n\nExpected value: \u001b[32m\"ok\"\u001b[39m\nReceived value: \u001b[31m\"healthy\"\u001b[39m\n\n  16 |     \n  17 |     const data = await response.json();\n> 18 |     expect(data).toHaveProperty('status', 'ok');\n     |                  ^\n  19 |     expect(data).toHaveProperty('timestamp');\n  20 |     expect(data).toHaveProperty('version');\n  21 |   });\n    at /Users/mikeyoung/CODING/rebuild-6.0/tests/api/restaurant-api.spec.ts:18:18"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-15T15:25:02.880Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/mikeyoung/CODING/rebuild-6.0/tests/api/restaurant-api.spec.ts",
                        "column": 18,
                        "line": 18
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "ebc8d9adb94d444ef652-2c1fe0ca77d2ca8f1812",
              "file": "../api/restaurant-api.spec.ts",
              "line": 13,
              "column": 7
            },
            {
              "title": "menu endpoints work correctly",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api",
                  "projectName": "api",
                  "results": [
                    {
                      "workerIndex": 5,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 20,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/mikeyoung/CODING/rebuild-6.0/tests/api/restaurant-api.spec.ts:26:31",
                        "location": {
                          "file": "/Users/mikeyoung/CODING/rebuild-6.0/tests/api/restaurant-api.spec.ts",
                          "column": 31,
                          "line": 26
                        },
                        "snippet": "  24 |     // Get menu\n  25 |     const menuResponse = await request.get(`${API_BASE}/api/v1/restaurants/${RESTAURANT_ID}/menu`);\n> 26 |     expect(menuResponse.ok()).toBeTruthy();\n     |                               ^\n  27 |     \n  28 |     const menu = await menuResponse.json();\n  29 |     expect(Array.isArray(menu)).toBeTruthy();"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/mikeyoung/CODING/rebuild-6.0/tests/api/restaurant-api.spec.ts",
                            "column": 31,
                            "line": 26
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  24 |     // Get menu\n  25 |     const menuResponse = await request.get(`${API_BASE}/api/v1/restaurants/${RESTAURANT_ID}/menu`);\n> 26 |     expect(menuResponse.ok()).toBeTruthy();\n     |                               ^\n  27 |     \n  28 |     const menu = await menuResponse.json();\n  29 |     expect(Array.isArray(menu)).toBeTruthy();\n    at /Users/mikeyoung/CODING/rebuild-6.0/tests/api/restaurant-api.spec.ts:26:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-15T15:25:03.181Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/mikeyoung/CODING/rebuild-6.0/tests/api/restaurant-api.spec.ts",
                        "column": 31,
                        "line": 26
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "ebc8d9adb94d444ef652-d4bd4de7b42202652965",
              "file": "../api/restaurant-api.spec.ts",
              "line": 23,
              "column": 7
            },
            {
              "title": "orders API handles CRUD operations",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api",
                  "projectName": "api",
                  "results": [
                    {
                      "workerIndex": 1,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 45,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /Users/mikeyoung/CODING/rebuild-6.0/tests/api/restaurant-api.spec.ts:60:33",
                        "location": {
                          "file": "/Users/mikeyoung/CODING/rebuild-6.0/tests/api/restaurant-api.spec.ts",
                          "column": 33,
                          "line": 60
                        },
                        "snippet": "  58 |       data: orderData\n  59 |     });\n> 60 |     expect(createResponse.ok()).toBeTruthy();\n     |                                 ^\n  61 |     \n  62 |     const createdOrder = await createResponse.json();\n  63 |     expect(createdOrder).toHaveProperty('id');"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/mikeyoung/CODING/rebuild-6.0/tests/api/restaurant-api.spec.ts",
                            "column": 33,
                            "line": 60
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  58 |       data: orderData\n  59 |     });\n> 60 |     expect(createResponse.ok()).toBeTruthy();\n     |                                 ^\n  61 |     \n  62 |     const createdOrder = await createResponse.json();\n  63 |     expect(createdOrder).toHaveProperty('id');\n    at /Users/mikeyoung/CODING/rebuild-6.0/tests/api/restaurant-api.spec.ts:60:33"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-15T15:25:02.881Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/mikeyoung/CODING/rebuild-6.0/tests/api/restaurant-api.spec.ts",
                        "column": 33,
                        "line": 60
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "ebc8d9adb94d444ef652-4cd0668ec103fa6cd09d",
              "file": "../api/restaurant-api.spec.ts",
              "line": 40,
              "column": 7
            },
            {
              "title": "AI voice endpoints respond correctly",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api",
                  "projectName": "api",
                  "results": [
                    {
                      "workerIndex": 6,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 1575,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"status\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"handshakeMs\": 1553, \"model\": \"gpt-4o-realtime-preview-2024-10-01\", \"note\": \"realtime:v1\", \"ok\": true}\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"status\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"handshakeMs\": 1553, \"model\": \"gpt-4o-realtime-preview-2024-10-01\", \"note\": \"realtime:v1\", \"ok\": true}\u001b[39m\n    at /Users/mikeyoung/CODING/rebuild-6.0/tests/api/restaurant-api.spec.ts:92:23",
                        "location": {
                          "file": "/Users/mikeyoung/CODING/rebuild-6.0/tests/api/restaurant-api.spec.ts",
                          "column": 23,
                          "line": 92
                        },
                        "snippet": "  90 |     \n  91 |     const handshake = await handshakeResponse.json();\n> 92 |     expect(handshake).toHaveProperty('status');\n     |                       ^\n  93 |     expect(handshake).toHaveProperty('capabilities');\n  94 |   });\n  95 |"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/mikeyoung/CODING/rebuild-6.0/tests/api/restaurant-api.spec.ts",
                            "column": 23,
                            "line": 92
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"status\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"handshakeMs\": 1553, \"model\": \"gpt-4o-realtime-preview-2024-10-01\", \"note\": \"realtime:v1\", \"ok\": true}\u001b[39m\n\n  90 |     \n  91 |     const handshake = await handshakeResponse.json();\n> 92 |     expect(handshake).toHaveProperty('status');\n     |                       ^\n  93 |     expect(handshake).toHaveProperty('capabilities');\n  94 |   });\n  95 |\n    at /Users/mikeyoung/CODING/rebuild-6.0/tests/api/restaurant-api.spec.ts:92:23"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-15T15:25:03.195Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/mikeyoung/CODING/rebuild-6.0/tests/api/restaurant-api.spec.ts",
                        "column": 23,
                        "line": 92
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "ebc8d9adb94d444ef652-6eed6f022a2a15760076",
              "file": "../api/restaurant-api.spec.ts",
              "line": 86,
              "column": 7
            },
            {
              "title": "error handling works correctly",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api",
                  "projectName": "api",
                  "results": [
                    {
                      "workerIndex": 2,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 23,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m401\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m401\u001b[39m\n    at /Users/mikeyoung/CODING/rebuild-6.0/tests/api/restaurant-api.spec.ts:99:39",
                        "location": {
                          "file": "/Users/mikeyoung/CODING/rebuild-6.0/tests/api/restaurant-api.spec.ts",
                          "column": 39,
                          "line": 99
                        },
                        "snippet": "   97 |     // Test 404 for non-existent order\n   98 |     const notFoundResponse = await request.get(`${API_BASE}/api/v1/orders/non-existent-id`);\n>  99 |     expect(notFoundResponse.status()).toBe(404);\n      |                                       ^\n  100 |\n  101 |     // Test validation error\n  102 |     const badRequestResponse = await request.post(`${API_BASE}/api/v1/orders`, {"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/mikeyoung/CODING/rebuild-6.0/tests/api/restaurant-api.spec.ts",
                            "column": 39,
                            "line": 99
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m401\u001b[39m\n\n   97 |     // Test 404 for non-existent order\n   98 |     const notFoundResponse = await request.get(`${API_BASE}/api/v1/orders/non-existent-id`);\n>  99 |     expect(notFoundResponse.status()).toBe(404);\n      |                                       ^\n  100 |\n  101 |     // Test validation error\n  102 |     const badRequestResponse = await request.post(`${API_BASE}/api/v1/orders`, {\n    at /Users/mikeyoung/CODING/rebuild-6.0/tests/api/restaurant-api.spec.ts:99:39"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-15T15:25:02.882Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/mikeyoung/CODING/rebuild-6.0/tests/api/restaurant-api.spec.ts",
                        "column": 39,
                        "line": 99
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "ebc8d9adb94d444ef652-d4ac8452035a54ff866b",
              "file": "../api/restaurant-api.spec.ts",
              "line": 96,
              "column": 7
            },
            {
              "title": "authentication and authorization work",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api",
                  "projectName": "api",
                  "results": [
                    {
                      "workerIndex": 4,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 20,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m404\u001b[39m\nReceived array: \u001b[31m[401, 403]\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m404\u001b[39m\nReceived array: \u001b[31m[401, 403]\u001b[39m\n    at /Users/mikeyoung/CODING/rebuild-6.0/tests/api/restaurant-api.spec.ts:116:24",
                        "location": {
                          "file": "/Users/mikeyoung/CODING/rebuild-6.0/tests/api/restaurant-api.spec.ts",
                          "column": 24,
                          "line": 116
                        },
                        "snippet": "  114 |       data: { setting: 'value' }\n  115 |     });\n> 116 |     expect([401, 403]).toContain(unauthorizedResponse.status());\n      |                        ^\n  117 |\n  118 |     // Test with test token if available\n  119 |     const testToken = process.env.TEST_TOKEN;"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/mikeyoung/CODING/rebuild-6.0/tests/api/restaurant-api.spec.ts",
                            "column": 24,
                            "line": 116
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m404\u001b[39m\nReceived array: \u001b[31m[401, 403]\u001b[39m\n\n  114 |       data: { setting: 'value' }\n  115 |     });\n> 116 |     expect([401, 403]).toContain(unauthorizedResponse.status());\n      |                        ^\n  117 |\n  118 |     // Test with test token if available\n  119 |     const testToken = process.env.TEST_TOKEN;\n    at /Users/mikeyoung/CODING/rebuild-6.0/tests/api/restaurant-api.spec.ts:116:24"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-15T15:25:03.182Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/mikeyoung/CODING/rebuild-6.0/tests/api/restaurant-api.spec.ts",
                        "column": 24,
                        "line": 116
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "ebc8d9adb94d444ef652-b6b5aca6adeef874d135",
              "file": "../api/restaurant-api.spec.ts",
              "line": 111,
              "column": 7
            },
            {
              "title": "rate limiting is properly configured",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api",
                  "projectName": "api",
                  "results": [
                    {
                      "workerIndex": 3,
                      "parallelIndex": 3,
                      "status": "passed",
                      "duration": 45,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-15T15:25:02.882Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "ebc8d9adb94d444ef652-2a77cdee9ca1ab3b25f1",
              "file": "../api/restaurant-api.spec.ts",
              "line": 130,
              "column": 7
            },
            {
              "title": "CORS headers are properly set",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api",
                  "projectName": "api",
                  "results": [
                    {
                      "workerIndex": 3,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 1,
                      "error": {
                        "message": "TypeError: request.options is not a function",
                        "stack": "TypeError: request.options is not a function\n    at /Users/mikeyoung/CODING/rebuild-6.0/tests/api/restaurant-api.spec.ts:145:36",
                        "location": {
                          "file": "/Users/mikeyoung/CODING/rebuild-6.0/tests/api/restaurant-api.spec.ts",
                          "column": 36,
                          "line": 145
                        },
                        "snippet": "  143 |\n  144 |   test('CORS headers are properly set', async ({ request }) => {\n> 145 |     const response = await request.options(`${API_BASE}/api/v1/health`);\n      |                                    ^\n  146 |     const headers = response.headers();\n  147 |     \n  148 |     expect(headers).toHaveProperty('access-control-allow-origin');"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/mikeyoung/CODING/rebuild-6.0/tests/api/restaurant-api.spec.ts",
                            "column": 36,
                            "line": 145
                          },
                          "message": "TypeError: request.options is not a function\n\n  143 |\n  144 |   test('CORS headers are properly set', async ({ request }) => {\n> 145 |     const response = await request.options(`${API_BASE}/api/v1/health`);\n      |                                    ^\n  146 |     const headers = response.headers();\n  147 |     \n  148 |     expect(headers).toHaveProperty('access-control-allow-origin');\n    at /Users/mikeyoung/CODING/rebuild-6.0/tests/api/restaurant-api.spec.ts:145:36"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-15T15:25:02.946Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/mikeyoung/CODING/rebuild-6.0/tests/api/restaurant-api.spec.ts",
                        "column": 36,
                        "line": 145
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "ebc8d9adb94d444ef652-9477d806fd97ff80b747",
              "file": "../api/restaurant-api.spec.ts",
              "line": 144,
              "column": 7
            }
          ]
        }
      ]
    }
  ],
  "errors": [],
  "stats": {
    "startTime": "2025-08-15T15:25:02.591Z",
    "duration": 2203.123,
    "expected": 1,
    "skipped": 0,
    "unexpected": 7,
    "flaky": 0
  }
}