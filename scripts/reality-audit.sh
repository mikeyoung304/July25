#!/bin/bash
set -euo pipefail

# Reality Auditor v3 — Nightly Documentation-to-Code Sync Check
# Validates that documentation claims match implementation reality

BRANCH_PREFIX="docs/reality-audit"
TIMESTAMP=$(date +%Y-%m-%d-%H%M%S)
AUDIT_BRANCH="${BRANCH_PREFIX}-${TIMESTAMP}"
REPORT_FILE="reports/reality_audit_${TIMESTAMP}.md"

echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
echo "🔍 Reality Auditor v3 — Nightly Sync Check"
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
echo ""
echo "Timestamp: $(date)"
echo "Branch: ${AUDIT_BRANCH}"
echo ""

# Ensure we're on main/master
MAIN_BRANCH=$(git remote show origin | grep "HEAD branch" | cut -d: -f2 | xargs)
echo "Main branch: ${MAIN_BRANCH}"
git checkout "${MAIN_BRANCH}" 2>/dev/null || git checkout main 2>/dev/null || git checkout master
git pull origin "${MAIN_BRANCH}"

# Run docs:check and capture output
echo ""
echo "Running docs:check (reality greps only)..."
DOCS_CHECK_OUTPUT=$(npm run docs:check 2>&1 || true)

# Extract reality grep failures
REALITY_FAILURES=$(echo "$DOCS_CHECK_OUTPUT" | grep "REALITY CHECK FAILED" || echo "")

if [ -z "$REALITY_FAILURES" ]; then
  echo "✅ All reality greps PASS — documentation in sync with code"
  exit 0
fi

echo "❌ Reality grep failures detected:"
echo "$REALITY_FAILURES"
echo ""

# Count failures
FAILURE_COUNT=$(echo "$REALITY_FAILURES" | wc -l | xargs)
echo "Total failures: ${FAILURE_COUNT}"

# Create audit branch
echo ""
echo "Creating audit branch: ${AUDIT_BRANCH}"
git checkout -b "${AUDIT_BRANCH}"

# Generate detailed audit report
mkdir -p reports
cat > "${REPORT_FILE}" << EOF
# Reality Audit Report

**Date**: $(date)
**Branch**: ${AUDIT_BRANCH}
**Status**: ❌ FAILED — ${FAILURE_COUNT} reality grep mismatch(es)

## Failures Detected

\`\`\`
${REALITY_FAILURES}
\`\`\`

## Full docs:check Output

\`\`\`
${DOCS_CHECK_OUTPUT}
\`\`\`

## Recommended Actions

1. **Review codebase changes** that may have invalidated documentation claims
2. **Update documentation** to reflect current implementation
3. **Update reality grep patterns** if implementation moved to different files
4. **Re-run docs:check** after fixes: \`npm run docs:check\`

## Reality Greps Reference

| Check | Pattern Location |
|-------|------------------|
| CORS allowlist | scripts/docs-check.js (Reality Greps section) |
| WebSocket JWT auth | scripts/docs-check.js (Reality Greps section) |
| RLS policies | scripts/docs-check.js (Reality Greps section) |
| Refresh latch | scripts/docs-check.js (Reality Greps section) |
| WS reconnect backoff | scripts/docs-check.js (Reality Greps section) |
| Voice split effects | scripts/docs-check.js (Reality Greps section) |

---

**Generated by**: Reality Auditor v3 (Nightly Sync Check)
EOF

# Commit report
git add "${REPORT_FILE}"
git commit -m "docs: reality audit report $(date +%Y-%m-%d) — ${FAILURE_COUNT} mismatch(es)

Reality greps detected ${FAILURE_COUNT} documentation-to-code sync issue(s).

See ${REPORT_FILE} for details.

🤖 Generated by Reality Auditor v3"

# Push branch
git push origin "${AUDIT_BRANCH}"

# Create PR using gh CLI
PR_BODY=$(cat <<PRBODY
# 🔍 Reality Audit: Documentation Sync Issues Detected

**Audit Date**: $(date)
**Failures**: ${FAILURE_COUNT} reality grep mismatch(es)

## Summary

The nightly Reality Auditor v3 has detected mismatches between documentation claims and actual implementation. This indicates recent code changes may have invalidated documented behaviors.

## Failures

\`\`\`
${REALITY_FAILURES}
\`\`\`

## Detailed Report

See: \`${REPORT_FILE}\`

## Next Steps

1. Review the audit report for specific grep failures
2. Update documentation to match current implementation
3. OR update reality grep patterns if code moved/refactored
4. Re-run \`npm run docs:check\` to verify fixes

## Reality Greps

Reality greps validate critical implementation claims:
- CORS allowlist (not wildcard)
- WebSocket JWT authentication
- RLS (Row Level Security) enabled
- Refresh token latch/rotation
- WebSocket reconnect with exponential backoff
- Voice ordering split audio effects

---

🤖 **Auto-generated** by Reality Auditor v3 (scheduled nightly check)
PRBODY
)

gh pr create \
  --title "docs: reality audit $(date +%Y-%m-%d) — sync issues detected" \
  --body "$PR_BODY" \
  --base "${MAIN_BRANCH}" \
  --head "${AUDIT_BRANCH}" \
  --label "documentation" \
  --label "automated"

echo ""
echo "✅ Audit PR created successfully"
echo ""
